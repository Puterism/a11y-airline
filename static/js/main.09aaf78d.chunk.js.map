{"version":3,"sources":["components/SpinButton/SpinButton.tsx","App.tsx","index.tsx"],"names":["SpinButton","label","valueState","min","max","increaseButtonLabel","decreaseButtonLabel","increaseMessage","decreaseMessage","props","value","setValue","useState","statusMessage","setStatusMessage","isIncreaseDisabled","isDecreaseDisabled","className","type","tabIndex","aria-disabled","onClick","Number","prevValue","onChange","event","nextValue","target","isNaN","role","maxLength","aria-valuenow","aria-valuemin","aria-valuemax","aria-label","inputMode","aria-atomic","aria-live","aria-relevant","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAiHeA,EAnGI,SAAC,GAUN,IATZC,EASW,EATXA,MACAC,EAQW,EARXA,WACAC,EAOW,EAPXA,IACAC,EAMW,EANXA,IAMW,IALXC,2BAKW,MALW,eAKX,MAJXC,2BAIW,MAJW,eAIX,MAHXC,uBAGW,gBAHUN,EAGV,uBAFXO,uBAEW,gBAFUP,EAEV,mBADRQ,EACQ,gJACeP,EADf,GACJQ,EADI,KACGC,EADH,OAE+BC,mBAAS,IAFxC,mBAEJC,EAFI,KAEWC,EAFX,KAILC,EAAqBL,GAASN,EAC9BY,GAAsBN,EAwC5B,OACE,gCACE,sBAAMO,UAAU,qBAAhB,SAAsChB,IACtC,sBAAKgB,UAAU,uBAAf,UACE,wBACEC,KAAK,SACLC,SAAU,EACVF,UAAU,0BACVG,gBAAeJ,EACfK,QAhBc,WAChBX,GAASP,IAEbW,EAAiB,GAAD,OAAIN,EAAJ,YAAuBc,OAAOZ,GAAS,IACvDC,GAAS,SAACY,GAAD,OAAeD,OAAOC,GAAa,OAOxC,SAOGjB,IAEH,mCACEY,KAAK,OACLR,MAAOA,EACPc,SAtDkB,SAACC,GACzB,IAAMC,EAAYJ,OAAOG,EAAME,OAAOjB,OAEX,KAAvBe,EAAME,OAAOjB,MAMbgB,GAAatB,EACfO,EAASP,GAKPsB,GAAavB,GAAOmB,OAAOM,MAAMF,GACnCf,EAASR,GAKXQ,EAASe,GAjBPf,EAAS,KAmDLM,UAAU,qBACVY,KAAK,aACLC,UAAW,EACXC,gBAAeT,OAAOZ,GACtBsB,gBAAe7B,EACf8B,gBAAe7B,EACf8B,aAAYjC,EACZkC,UAAU,WACN1B,IAEN,wBACES,KAAK,SACLC,SAAU,EACVF,UAAU,0BACVG,gBAAeL,EACfM,QA9Cc,WAChBX,GAASN,IAEbU,EAAiB,GAAD,OAAIP,EAAJ,YAAuBe,OAAOZ,GAAS,IACvDC,GAAS,SAACY,GAAD,OAAeD,OAAOC,GAAa,OAqCxC,SAOGlB,IAEH,qBAAKY,UAAU,SAASmB,cAAY,OAAOC,YAAU,YAAYC,gBAAc,YAA/E,SACGzB,WClFI0B,G,MApBH,WACV,IAAMrC,EAAaU,mBAA0B,GAE7C,OACE,uBAAMK,UAAU,MAAhB,UACE,2DACA,cAAC,EAAD,CACEhB,MAAM,eACNC,WAAYA,EACZC,IAAK,EACLC,IAAK,EACLC,oBAAoB,mEACpBC,oBAAoB,mEACpBC,gBAAgB,yCAChBC,gBAAgB,gDCdxBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.09aaf78d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './SpinButton.css';\n\ninterface Props extends React.InputHTMLAttributes<HTMLInputElement> {\n  label: string;\n  valueState: [string | number, React.Dispatch<React.SetStateAction<string | number>>];\n  min: number;\n  max: number;\n  increaseButtonLabel: string;\n  decreaseButtonLabel: string;\n  increaseMessage: string;\n  decreaseMessage: string;\n}\n\nconst SpinButton = ({\n  label,\n  valueState,\n  min,\n  max,\n  increaseButtonLabel = '증가',\n  decreaseButtonLabel = '감소',\n  increaseMessage = `${label} 증가`,\n  decreaseMessage = `${label} 감소`,\n  ...props\n}: Props) => {\n  const [value, setValue] = valueState;\n  const [statusMessage, setStatusMessage] = useState('');\n\n  const isIncreaseDisabled = value >= max;\n  const isDecreaseDisabled = !value;\n\n  const handleChangeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const nextValue = Number(event.target.value);\n\n    if (event.target.value === '') {\n      setValue('');\n\n      return;\n    }\n\n    if (nextValue >= max) {\n      setValue(max);\n\n      return;\n    }\n\n    if (nextValue <= min || Number.isNaN(nextValue)) {\n      setValue(min);\n\n      return;\n    }\n\n    setValue(nextValue);\n  };\n\n  const increaseValue = () => {\n    if (value >= max) return;\n\n    setStatusMessage(`${increaseMessage} ${Number(value) + 1}`);\n    setValue((prevValue) => Number(prevValue) + 1);\n  };\n\n  const decreaseValue = () => {\n    if (value <= min) return;\n\n    setStatusMessage(`${decreaseMessage} ${Number(value) - 1}`);\n    setValue((prevValue) => Number(prevValue) - 1);\n  };\n\n  return (\n    <div>\n      <span className=\"spin-button__label\">{label}</span>\n      <div className=\"spin-button__wrapper\">\n        <button\n          type=\"button\"\n          tabIndex={0}\n          className=\"spin-button__button sub\"\n          aria-disabled={isDecreaseDisabled}\n          onClick={decreaseValue}\n        >\n          {decreaseButtonLabel}\n        </button>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={handleChangeValue}\n          className=\"spin-button__input\"\n          role=\"spinbutton\"\n          maxLength={1}\n          aria-valuenow={Number(value)}\n          aria-valuemin={min}\n          aria-valuemax={max}\n          aria-label={label}\n          inputMode=\"numeric\"\n          {...props}\n        />\n        <button\n          type=\"button\"\n          tabIndex={0}\n          className=\"spin-button__button add\"\n          aria-disabled={isIncreaseDisabled}\n          onClick={increaseValue}\n        >\n          {increaseButtonLabel}\n        </button>\n        <div className=\"hidden\" aria-atomic=\"true\" aria-live=\"assertive\" aria-relevant=\"additions\">\n          {statusMessage}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SpinButton;\n","import { useState } from 'react';\nimport SpinButton from './components/SpinButton/SpinButton';\nimport './App.css';\n\nconst App = () => {\n  const valueState = useState<string | number>(1);\n\n  return (\n    <main className=\"App\">\n      <h1>승객 선택</h1>\n      <SpinButton\n        label=\"성인\"\n        valueState={valueState}\n        min={0}\n        max={3}\n        increaseButtonLabel=\"성인 탑승자 한 명 늘리기\"\n        decreaseButtonLabel=\"성인 탑승자 한 명 줄이기\"\n        increaseMessage=\"성인 승객 추가\"\n        decreaseMessage=\"성인 승객 감소\"\n      />\n    </main>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}